{% extends 'base.html.twig' %}

{% block title %}Editar{% endblock %}

{% block body %}
    <link rel="stylesheet" href="{{ asset('assets/_style/cropper.css') }}" />
    <script src="{{ asset('assets/_js/cropper.js') }}"></script>
    <script src="{{ asset('assets/_js/cropimage.js') }}"></script>

    <div class="event-edit-profile-body">
        <main>
            {{ form_start(form_register, {'attr': {'class': 'frm-event-general'}}) }}
            <h1>Mi Perfil <i class="fas fa-user-edit"></i></h1>

            {{ form_errors(form_register) }}

            {% block block_name %}
                {{ form_label(form_register.name, 'Nombres', {'label_attr': {'class': ''}}) }}
                <div class="form-group">
                    {{ form_errors(form_register.name) }}
                    {{ form_widget(form_register.name) }}
                </div>
            {% endblock %}

            {% block block_surname %}
                {{ form_label(form_register.surname, 'Apellidos', {'label_attr': {'class': ''}}) }}
                <div class="form-group">
                    {{ form_errors(form_register.surname) }}
                    {{ form_widget(form_register.surname) }}
                </div>
            {% endblock %}

            {% block block_gender %}
                {{ form_label(form_register.gender, 'Sexo', {'label_attr': {'class': ''}}) }}
                <div class="form-group">
                    {{ form_errors(form_register.gender) }}
                    {{ form_widget(form_register.gender) }}
                </div>
            {% endblock %}

            {% block block_date %}
                {{ form_label(form_register.birthday, 'Fecha de Nacimiento', {'label_attr': {'class': ''}}) }}

                <div class="form-group ev-date-control">
                    {{ form_errors(form_register.birthday) }}
                    {{ form_widget(form_register.birthday.day, {'attr': {'class': 'form-control'}}) }}
                    {{ form_widget(form_register.birthday.month, {'attr': {'class': 'form-control'}}) }}
                    {{ form_widget(form_register.birthday.year, {'attr': {'class': 'form-control'}}) }}
                </div>
            {% endblock %}

            {% block block_phone %}
                {{ form_label(form_register.phone, 'Phone', {'label_attr': {'class': ''}}) }}
                <div class="form-group">
                    {{ form_errors(form_register.phone) }}
                    {{ form_widget(form_register.phone) }}
                </div>
            {% endblock %}

            {% block blockcompany %}
                {{ form_label(form_register.company, 'Soy Empresa', {'label_attr': {'class': ''}}) }}
                <div class="form-group">
                    {{ form_errors(form_register.company) }}
                    {{ form_widget(form_register.company) }}
                </div>
            {% endblock %}
            {% block block_cid %}
                {{ form_label(form_register.companyid, 'Doc. Identidad', {'label_attr': {'class': ''}}) }}
                <div class="form-group">
                    {{ form_errors(form_register.companyid) }}
                    {{ form_widget(form_register.companyid) }}
                </div>
            {% endblock %}
            {% block block_description %}
                {{ form_label(form_register.description, 'Algo sobre m√≠', {'label_attr': {'class': ''}}) }}
                <div class="form-group">
                    {{ form_errors(form_register.description) }}
                    {{ form_widget(form_register.description) }}
                </div>
            {% endblock %}


            {% block block_password %}
                {{ form_label(form_register.password, 'New Password', {'label_attr': {'class': ''}}) }}
                <div class="form-group">
                    {{ form_errors(form_register.password) }}
                    {{ form_widget(form_register.password) }}
                </div>
            {% endblock %}

            {{ form_widget(form_register.Registrar) }}

            {{ form_end(form_register) }}

        </main>
        <aside>

            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.4/croppie.min.css">
            <script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.4/croppie.min.js"></script>

            <div class="frm-event-general" style="
                margin: 0 auto 0 auto;
                width: 100%;
                padding: 1em;
                padding-bottom: 60px;">

                <div class="form-group">
                    <h1>Mi Foto <i class="fas fa-expand"></i></h1>
                    <form method="post">
                        <div id="upload-image"></div>
                        <label for="photo_user" class="btn btn-big">
                            Seleccionar Foto <i class="far fa-image"></i>
                        </label>
                        <input type="file" name="photo_user" id="photo_user" required="required" class="sr-only" accept="image/*"  >
                        <button class="btn btn-primary btn-big cropped_image">Upload Image <i class="fas fa-cloud-upload-alt"></i></button>

                    </form>
                </div>

            </div>



        </aside>
    </div>

    {% if app.user.photo == 1 %}
    {% else %}
    {% endif %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        /**
         * Convert a base64 string in a Blob according to the data and contentType.
         *
         * @param b64Data {String} Pure base64 string without contentType
         * @param contentType {String} the content type of the file i.e (image/jpeg - image/png - text/plain)
         * @param sliceSize {Int} SliceSize to process the byteCharacters
         * @see http://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript
         * @return Blob
         */
        function b64toBlob(b64Data, contentType, sliceSize) {
            contentType = contentType || '';
            sliceSize = sliceSize || 512;

            var byteCharacters = atob(b64Data);
            var byteArrays = [];

            for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
                var slice = byteCharacters.slice(offset, offset + sliceSize);

                var byteNumbers = new Array(slice.length);
                for (var i = 0; i < slice.length; i++) {
                    byteNumbers[i] = slice.charCodeAt(i);
                }

                var byteArray = new Uint8Array(byteNumbers);

                byteArrays.push(byteArray);
            }

            var blob = new Blob(byteArrays, {type: contentType});
            return blob;
        }


        $image_crop = $('#upload-image').croppie({

            url: '{{asset(varGlobImgAvatars~app.user.coverprofile)}}',
            enableExif: true,
            viewport: {
                width: 250,
                height: 250,
                type: 'circle'
            },
            boundary: {
                width: 250,
                height: 250,
            }
        });
        $('#photo_user').on('change', function () {
            var reader = new FileReader();
            reader.onload = function (e) {
                $image_crop.croppie('bind', {
                    url: e.target.result
                }).then(function(){
                    console.log('jQuery bind complete');
                });
            }
            reader.readAsDataURL(this.files[0]);
        });

        $('.cropped_image').on('click', function (ev) {
            ev.preventDefault();
            $image_crop.croppie('result', {
                type: 'canvas',
                size: 'viewport'
            }).then(function (response) {
                var midata = new FormData();
                var photo = JSON.stringify(response);
                midata.append('imgb64', photo);



                // Split the base64 string in data and contentType
                var block = response.split(";");
// Get the content type of the image
                var contentType = block[0].split(":")[1];// In this case "image/gif"
// get the real base64 content of the file
                var realData = block[1].split(",")[1];// In this case "R0lGODlhPQBEAPeoAJosM...."

// Convert it to a blob to upload
                var blob = b64toBlob(realData, contentType);

// Create a FormData and append the file with "image" as parameter name
                var formDataToUpload = new FormData();
                formDataToUpload.append("image", blob);


                $.ajax({
                    url: URL_EVENTSOFT + "/my-profile/photo-new",
                    data: formDataToUpload,// Add as Data the Previously create formData
                    type:"POST",
                    contentType:false,
                    processData:false,
                    cache:false,
                    dataType:"json", // Change this according to your response from the server.
                    error:function(err){
                        console.error(err);
                    },
                    success:function(data){
                        console.log(data);
                        $("#ev-avatar").attr("src",URL_PUBLIC+data.img);
                    },
                    complete:function(){
                        console.log("Request finished.");
                    }
                });

            });
        });

    </script>
{% endblock %}
